buildscript {
    ext {
        // 플러그인 버전
        queryDslVersion = "5.0.0"
        grpcVersion = '1.58.0'
        protobufPluginVersion = '0.8.18'
        protocVersion = '3.21.4'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

group = 'yesable.gateway'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    // GRPC
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    implementation 'com.google.protobuf:protobuf-java-util:3.21.12'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def generatedFilesBaseDir = "${projectDir}/src/generated"

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * Proto Build Options
 */
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc{}
        }
    }
    generatedFilesBaseDir = "${generatedFilesBaseDir}"
}

sourceSets {
    main {
        java {
            srcDirs "${generatedFilesBaseDir}/main/grpc"
            srcDirs "${generatedFilesBaseDir}/main/java"

        }
    }
    /*
    test {
        //여기도 srcDirs 설정해야 test에도 동작
    }*/
}
